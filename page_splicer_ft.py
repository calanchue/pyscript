# -*- coding:utf-8 -*-
'''
Created on 2013. 4. 30.

@author: Hwang-JinHwan

parsing the txt file which are generated by coping the pdf faries tale rpg rule book 
to create bootstrap document
'''
import re
import codecs

head = """
<head>
    <style type="text/css">
        body {
          padding-top: 60px;
          padding-bottom: 40px;
        }
      </style>

    <link href="http://netdna.bootstrapcdn.com/twitter-bootstrap/2.3.1/css/bootstrap-combined.min.css" rel="stylesheet">
</head>
<body>
<div class="navbar navbar-inverse navbar-fixed-top">
    <div class="navbar-inner">
      <div class="container">
        <div class="nav-collapse collapse">
          <ul class="nav">
            
          </ul>
        </div>
      </div>
    </div>
 </div> 
<div class='container'>
<div class="row">
"""
foot = """
</div>
</div>
<script src="http://netdna.bootstrapcdn.com/twitter-bootstrap/2.3.1/js/bootstrap.min.js"></script>
</body>
"""


if __name__ == '__main__':
    # fr = open("resource/origin_ft.txt", 'r')
    fr = codecs.open("resource/origin_ft.txt", 'r', encoding='utf-8')
    fw = codecs.open("resource/output.html", 'w', encoding='utf-8')
    lines = fr.readlines()
    
    fw.write(head)
    
    buffered = []
    for line in lines:         
        # data = fr.read()
        matchObj = re.match(ur'— (\d+) —', line, re.M | re.I)
        if matchObj:
            matched_tail = ""
            matched_tail = matchObj.group()
            buffered.append(matched_tail)
            print "#MATCH:", matched_tail
            page_num = matchObj.group(1)
            buffered.insert(0, "<pre>")
            buffered.append("</pre>")
            buffered.insert(0, "<a name=p%s></a>" % page_num)
            fw.write("".join(buffered))
            buffered = []
            buffered.append(line[len(matched_tail):])
        else:
            buffered.append(line)
            
            
            
        
        """for line in lines:
            fw.write(line)
        fw.write(lines+"\n");
        buffered = []"""
        
    fw.write("".join(buffered))
    fw.write(foot) 
    
    fr.close() 
    fw.close()
    
    
    pass
